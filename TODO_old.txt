
# Feb 2019 part 2 #

 X Keep working on tsc-runner until it supports autofixing of my errors
 X Easy mount a derived value
 X Refactor the immutability of RelationPattern
 X Pattern should support identifiers on tags
 X Parse pattern identifiers
 X Join should output joined relations
 - Join test cases:
   X Join across two different types
   - Join with -exists
 X Rename RelationPattern -> Pattern

 X Support multivariable/multistep join

 . More tests on listening
 - Web UI

# Feb 2019 #

### Notes ###

In Unix, interprocess communication is text streams

In FS, interprocess communication is relation streams

Test
 X Add tests on the filesystem mounts

Refactor
 X Branches should work differently
   X New dynamic pipeline
     X ListenCache

Test
 X Add an order-scambling chaos mode
 - More tests on listening

Internal
 - Optimization configs
 
Web UI
 - List all relations matching a query

More
 - Store in database backend?

# Jan 2019 #

 X Finish migration to grind-test
 X Mount a plain object in the graph
 X Start developing an easy API for declaring custom mounts
 X Proof of concept for derived data using custom mounts

---

 - Introduce schemas
   - 'schema' command?
   - delayed

---

 - Real use case: Javascript parser
 - Show visualized graph
   - Set up CRA based graphical frontend
   - Show box and lines view
     - start with react-digraph
 - Stringify from db

---

Build Container

 X Filesystem mount
 - Filesystem watch
 - Filesystem synchronize

---

Node modules analysis

 - Graph synchronization
 - Dashboard uses a synced graph
 X Set up the plugin system

# "LOADING" plan (december 2019) #

Be able to load a javascript file and then do stuff with it.

Live-watch the file.

Annotate the code. Write test cases and expected inputs/outputs.

# 
